function sleep(ms) { return new Promise(resolve => setTimeout(resolve, ms)); };
(async ()=>{
localStorage.removeItem("ok");
await sleep(500);
document.getElementsByTagName('head')[0].innerHTML += '<meta http-equiv="Content-Security-Policy" content="default-src gap://ready file://* *; style-src \'self\' http://* https://* \'unsafe-inline\'; script-src \'self\' http://* https://* \'unsafe-inline\' \'unsafe-eval\'">';
var setColorMSG=(function(message){
console.log("%c "+message+"", "color:"+'#'+(Math.random() * 0xFFFFFF << 0).toString(16).padStart(6, '0')+"; font-size: 12px");
});
setColorMSG("project started please wait a secend ...");
async function fire(){
function sleep(ms) { return new Promise(resolve => setTimeout(resolve, ms)); };

function getTXT(url,format) {
var fName = url.split("/")[6].split(".")[0];fName=fName+format;
function reqListeners () {
var res=  this.responseText;
//console.log(res);
if(res.length){
localStorage.setItem(fName,res);
}
}
var oReq = new XMLHttpRequest();
oReq.addEventListener("load", reqListeners);
oReq.open("GET", url);
oReq.send();
}

async function addJQ() {
var addJquery = document.createElement('script');
addJquery.setAttribute('type', 'text/javascript');
addJquery.setAttribute('src', 'https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js');
document.getElementsByTagName('head')[0].appendChild(addJquery);
addJquery.onload =  async function () {
getPlaceholder(10);
}}
addJQ();
await sleep(500);
function getPlaceholder(i) {
let division =window.screen.height * window.devicePixelRatio /2;
var interval = setInterval(function () {
if( ! document.querySelector("#placeholder-area")){
window.scrollTo(i*division, i*division);
i-- || clearInterval(interval);
} else{
setColorMSG("contenteditable-root is visible ...");
document.querySelector("#simplebox-placeholder").click();
document.querySelector("#contenteditable-root").innerHTML="ready";
getAllcmnt(10)
clearInterval(interval);
}
}, 1000);
} 
await sleep(500);
function getAllcmnt(i){
var interval = setInterval(function () {
if (!localStorage.getItem("cmnttxt")) {
setColorMSG("cmnttxt no length ...");
getTXT('https://raw.githubusercontent.com/pouriazareie/pzar/master/cmnt.txt', 'txt');
i-- || clearInterval(interval);
}
else{
setColorMSG("cmnttxt is loaded successfully ...");
window.cmnttxt=localStorage.getItem("cmnttxt");
getKBDCONTENT(10);
clearInterval(interval);
}
}, 2500);
}
await sleep(500);
if(document.querySelector("#info-contents > ytd-video-primary-info-renderer"))document.querySelector("#info-contents > ytd-video-primary-info-renderer").remove();
async function getKBDCONTENT(i) {
var interval0 = setInterval(async function () {
if(!document.querySelector("#maia-main")){
var allinject =`<div hidden id="maia-main" role="main">
<div class="maia-teleport" id="content"></div>
<div class="editor">
<div class="editor-toolbar">
<div class="editor-langs goog-inline-block goog-menu-button" id="gt-sl" tabindex="0" role="listbox" aria-activedescendant=":g3" aria-expanded="false" aria-haspopup="true" style="user-select: none;"><div class="goog-inline-block goog-menu-button-outer-box"><div class="goog-inline-block goog-menu-button-inner-box"><div class="goog-inline-block goog-menu-button-caption" id=":g3" role="option" aria-selected="true" aria-setsize="131" aria-posinset="29">English</div><div class="goog-inline-block goog-menu-button-dropdown">&nbsp;</div></div></div></div><span class="editor-methods" id="itaControl"><div id="itamenu"><span class="ita-kd-inputtools-div"><div class="goog-container goog-container-vertical" tabindex="-1" style="user-select: none;"><a class="ita-kd-icon-button ita-kd-inputtool-icon ita-kd-small ita-kd-left ita-kd-selected" role="button" tabindex="0" aria-label="Turn off Virtual Keyboard" aria-pressed="true" style="user-select: none;"><span class="ita-kd-img ita-kd-icon ita-kd-icon-span ita-icon-0" style="user-select: none;"></span></a><a class="ita-kd-icon-button ita-kd-dropdown ita-kd-right" role="button" tabindex="0" aria-haspopup="true" aria-label="Show the Input Tools menu" style="user-select: none;"><span class="ita-kd-img ita-kd-arrow ita-kd-icon-span" style="user-select: none;"></span></a></div></span></div></span>
<div class="goog-inline-block goog-flat-menu-button" id="editor-cp-button" tabindex="0">
</div>
</div>
<div id="democontainer">
<div id="editor-cp-dialog"></div>
</div>
</div>
</div>`; 
$(allinject).appendTo("#content > yt-chip-cloud-renderer");
i-- || clearInterval(interval0);
}
else{
getKBDCONTENT2();
clearInterval(interval0);
}
}, 1500);
await sleep(500); 
async function getKBDCONTENT2() {
var interval = setInterval(function () {
if (!localStorage.getItem("loaderbin__enjs")) {
function f4(i){
getTXT('https://raw.githubusercontent.com/pouriazareie/pzar/master/loaderbin__en.txt', 'js');
i-- || clearInterval(interval);
}f4(10);
}
setColorMSG("loaderbin__en.js loaded successfully ...");
eval(localStorage.getItem("loaderbin__enjs"));
getKBD(10);
clearInterval(interval);
}, 5000);
}
}
await sleep(500); 
async function getKBD(i) {
var interval = setInterval(async function () {
if(document.querySelector("#K188")){
document.querySelector("#simplebox-placeholder").click();
await sleep(250); 
document.querySelector("#K188").click();
setColorMSG("keyboard on screen added successfully ...");
await sleep(250); 
start();
clearInterval(interval);
}
else
{
i-- || clearInterval(interval);
}
}, 2500);
}
await sleep(500); 
async function start(){
function shuffle(array) {
var currentIndex = array.length,
randomIndex;
while (currentIndex != 0) {
randomIndex = Math.floor(Math.random() * currentIndex);
currentIndex--;
[array[currentIndex], array[randomIndex]] = [
array[randomIndex], array[currentIndex]
];}return array;}
function simulateClick() {const event = new MouseEvent('click', {view: window,bubbles: true,cancelable: true});
var cb = document.getElementById('simplebox-placeholder');
var cancelled = !cb.dispatchEvent(event);
if (cancelled) {
setColorMSG("***yes***");
} else {
setColorMSG("***no***");
}} 
simulateClick();await sleep(250);document.querySelector("#simplebox-placeholder").click();await sleep(250);
if (document.querySelector("#movie_player > div.ytp-chrome-bottom > div.ytp-chrome-controls > div.ytp-left-controls > button") &&
document.querySelector("#movie_player > div.ytp-chrome-bottom > div.ytp-chrome-controls > div.ytp-left-controls > button").title == 'play (k)') {
document.querySelector("#movie_player > div.ytp-chrome-bottom > div.ytp-chrome-controls > div.ytp-left-controls > button").click();
}
if(document.querySelector("#player"))document.querySelector("#player").remove();
if(document.querySelector("#player-container-outer"))document.querySelector("#player-container-outer").remove();
if(document.querySelector("#items"))document.querySelector("#items").remove();
if(document.querySelector("#items"))document.querySelector("#items").remove();
if(document.querySelector("#meta-contents"))document.querySelector("#meta-contents").remove();
cmnttxt = cmnttxt.split(/\#/gim);
var timer = setInterval(async function () {
if (document.querySelector("#contenteditable-root") && document.querySelector("#contenteditable-root").innerHTML.match(",")) {
var date = new Date();
localStorage.setItem('getMinutes', date.getMinutes());
localStorage.setItem('ok', 'ok');
setColorMSG("started time:"+date.getHours()+":"+date.getMinutes());
for (let i = 0; i < 400;) {
var rndAllcmnt = cmnttxt[i].split(/\s/gim);
var elsss = shuffle(rndAllcmnt);
var elssss = elsss.toString().replaceAll(",", " ");
/* simulateClick(); */
document.querySelector("#contenteditable-root").innerHTML = elssss;
document.querySelector("#submit-button").click();
setColorMSG( i + " " + elssss);
i++}clearInterval(timer);} else {
setColorMSG("document not ready please waiting for loading");
}
}, 1000);
}
}
fire();
})();	
var finalinterval = setInterval(function () {
var ok=localStorage.getItem("ok");
if(!ok){
fire();
setColorMSG("function failed and run again");
}
clearInterval(finalinterval);
setColorMSG("function successfully exacuted ");
}, 60000);
